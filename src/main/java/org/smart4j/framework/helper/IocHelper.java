package org.smart4j.framework.helper;import org.smart4j.framework.annotation.Inject;import org.smart4j.framework.util.ArrayUtil;import org.smart4j.framework.util.CollectionUtil;import org.smart4j.framework.util.ReflectionUtil;import java.lang.reflect.Field;import java.util.Map;/** * @ClassName IocHelper * @Description TODO * @Author mac * @Date 2019-05-04 04:39 PM * Version 1.0 **/public class IocHelper {    static {        Map<Class<?>, Object> beanMap = BeanHelper.getBeanMap();        if(CollectionUtil.isNotEmpty(beanMap)){            for(Map.Entry<Class<?>, Object> beanEntity : beanMap.entrySet()){                Class<?> beanClass = beanEntity.getKey();                Object beanInstance = beanEntity.getValue();                Field[] beanFields = beanClass.getDeclaredFields();                if(ArrayUtil.isNotEmpty(beanFields)){                    for(Field beanField : beanFields){                        if(beanField.isAnnotationPresent(Inject.class)){                            Class<?> beanFieldClass = beanField.getType();                            Object beanFieldInstance = beanMap.get(beanFieldClass);                            System.out.println("IocHelper: beanClass【" +  beanClass.getName() +  "】, beanInstance=【" +  beanInstance.toString() +                                    "】, beanField.beanFieldClass【" +  beanFieldClass.getName() + "】,beanField.beanFieldInstance【"                                    + beanFieldInstance.toString() + "】");                            try {                                beanField.setAccessible(true);                                System.out.println("beanField.get(beanInstance) null is " + (beanField.get(beanInstance) == null));                                if (beanFieldInstance != null) {                                    ReflectionUtil.setField(beanInstance, beanField, beanFieldInstance);                                }                                beanField.setAccessible(true);                                System.out.println("beanField.get(beanInstance) null is " + (beanField.get(beanInstance) == null));                            }catch (Exception e){                                System.out.println(e);                            }                        }                    }                }            }        }    }}